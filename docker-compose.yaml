services:
  postgres:
    image: postgres:13
    container_name: smart-home-postgres
    environment:
      POSTGRES_USER: your_username
      POSTGRES_PASSWORD: your_password
      POSTGRES_DB: smart_home
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - kafka_network

  smart-home-monolith:
    build: ./smart-home-monolith
    container_name: smart-home-monolith
    ports:
      - "8081:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/smart_home
      SPRING_DATASOURCE_USERNAME: your_username
      SPRING_DATASOURCE_PASSWORD: your_password
    depends_on:
      - postgres
      - kafka
    networks:
      - kafka_network

  devices-service:
    build: ./services/devices
    container_name: devices-service
    ports:
      - "5001:5000"
    networks:
      - kafka_network

  telemetry-service:
    build: ./services/telemetry
    container_name: telemetry-service
    ports:
      - "5002:5001"
    networks:
      - kafka_network

  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - kafka_network

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    container_name: kafka
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      KAFKA_CREATE_TOPICS: "heating-system-control:1:1,heating-system-set-temperature:1:1,heating-system-temperature-request:1:1,heating-system-temperature-response:1:1"

    ports:
      - "9092:9092"
    networks:
      - kafka_network

volumes:
  postgres-data:

networks:
  kafka_network:
    driver: bridge
